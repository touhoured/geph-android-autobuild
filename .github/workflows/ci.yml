name: Android CI

on:
  push:
  schedule:
    - cron: "0 7 * * *"
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always
permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      upstream: geph-official/geph-android
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ env.upstream }}
          fetch-depth: 0
          submodules: true

      - name: Get environment variable
        id: getenv
        shell: bash
        run: |
          echo "date=$(date -I)" >> "${GITHUB_ENV}"
          echo "hash=$(git log --pretty=format:%h -n 1)" >> "${GITHUB_ENV}"
          echo "full_hash=$(git log --pretty=format:%H -n 1)" >> "${GITHUB_ENV}"
          echo "tag_name=$(git describe --tags)" >> "${GITHUB_ENV}"

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"
          cache: gradle

      - name: Get binary
        run: |
          export PREFIX="https://github.com/touhoured/geph4-client-autobuild/releases/download/daily"
          PREBUILD="./prebuild"
          ARM_DIR=$PREBUILD"/armeabi-v7a"
          ARM64_DIR=$PREBUILD"/arm64-v8a"
          TARGET="libgeph.so"
          mkdir -p ${ARM_DIR}
          mkdir -p ${ARM64_DIR}
          curl -L "${PREFIX}/geph4-client-armv7-linux-androideabi" -o "${ARM_DIR}/${TARGET}"
          curl -L "${PREFIX}/geph4-client-aarch64-linux-android" -o "${ARM64_DIR}/${TARGET}"

      - name: Get Sign
        run: |
          curl "https://android.googlesource.com/platform/build/+/master/target/product/security/testkey.x509.pem?format=TEXT" | base64 -d > testkey.x509.pem
          curl "https://android.googlesource.com/platform/build/+/master/target/product/security/testkey.pk8?format=TEXT" | base64 -d > testkey.pk8
          name="testkey"
          alias="${name}"
          pk8="${name}.pk8"
          pk12="${name}.p12"
          cert="${name}.x509.pem"
          key="${name}.priv.pem"
          keystore="${name}.jks"
          keystorepass="${name}"
          openssl pkcs8 -in ${pk8} -inform DER -out ${key} -outform PEM -nocrypt
          openssl pkcs12 -export -in ${cert} -inkey ${key} -out ${pk12} -name ${alias} -password pass:${keystorepass}
          keytool -importkeystore -srckeystore "${pk12}" -srcstoretype PKCS12 -srcstorepass "${keystorepass}" -destkeystore "${keystore}" -deststorepass "${keystorepass}"

      - name: NPM build
        working-directory: gephgui
        run: |
          npm install
          npm run build

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: |
          name="testkey"
          ls
          ./gradlew build
          echo           ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file="$GITHUB_WORKSPACE/${name}.jks" \
          -Pandroid.injected.signing.store.password="${name}" \
          -Pandroid.injected.signing.key.alias="${name}" \
          -Pandroid.injected.signing.key.password="${name}"

          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file="${name}.jks" \
            -Pandroid.injected.signing.store.password="${name}" \
            -Pandroid.injected.signing.key.alias="${name}" \
            -Pandroid.injected.signing.key.password="${name}"

      - name: test
        run: |
          pwd
          find .

      - uses: actions/upload-artifact@v3
        with:
          path: |
            ./app/build/outputs/apk/*/*.apk

      - name: Releases
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.date }}
          tag_name: archive-${{ env.hash }}
          target_commitish: ${{ env.full_hash }}
          files: ./app/build/outputs/apk/*/*.apk
